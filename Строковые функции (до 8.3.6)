Функция _СтрНачинаетсяС(Строка, СтрокаПоиска) Экспорт
	Возврат Найти(Строка, СтрокаПоиска) = 1;
КонецФункции 

Функция _СтрЗаканчиваетсяНа(Строка, СтрокаПоиска) Экспорт
	Возврат Прав(Строка, СтрДлина(СтрокаПоиска)) = СтрокаПоиска;
КонецФункции

Функция _СтрРазделить(знач Строка, Разделитель, ВключатьПустые = Истина) Экспорт
	Результат = Новый Массив;
	
	Если Строка = "" Тогда 
		Если ВключатьПустые Тогда
			Результат.Добавить(Строка);
		КонецЕсли;
		Возврат Результат;
	КонецЕсли;
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если ВключатьПустые ИЛИ НЕ Подстрока = "" Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если ВключатьПустые ИЛИ НЕ Строка = "" Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
		
	Возврат Результат;
КонецФункции

Функция _СтрСоединить(Строки, знач Разделитель = Неопределено) Экспорт
	Результат = "";
	
	Если Разделитель = Неопределено Тогда
		Разделитель = "";
	КонецЕсли;
	
	Если Строки.Количество() Тогда
		Результат = Результат + Строки[0];
	КонецЕсли;
	
	Для сч = 1 По Строки.ВГраница() Цикл
		Результат = Результат + Разделитель + Строки[сч];
	КонецЦикла;
		
	Возврат Результат;
КонецФункции

Функция _СтрНайти(Строка, ПодстрокаПоиска, НаправлениеПоиска = Неопределено, НачальнаяПозиция = Неопределено, НомерВхождения = 1) Экспорт
	// НаправлениеПоиска: СКонца,СНачала. По умолчанию: СНачала
	
	Если Строка = "" и ПодстрокаПоиска = "" Тогда
		// чтобы отрабатывало как в платформе
		Если НаправлениеПоиска = "СКонца" Тогда
			Если НомерВхождения = 1 Тогда
				Возврат 1;
			Иначе
				Возврат 0;
			КонецЕсли;
		Иначе
			Возврат мин(НомерВхождения, ?(НачальнаяПозиция=Неопределено, 1, НачальнаяПозиция));
		КонецЕсли;
	КонецЕсли;
	
	Если НачальнаяПозиция = Неопределено Тогда
		Если НаправлениеПоиска = "СКонца" Тогда
			лНачальнаяПозиция = СтрДлина(Строка);
		Иначе
			лНачальнаяПозиция = 1;
		КонецЕсли;
	Иначе
		лНачальнаяПозиция = НачальнаяПозиция;
	КонецЕсли;
	
	Если НаправлениеПоиска = "СКонца" Тогда
		лСтрока = "";
		Для сч = 1 По СтрДлина(Строка) Цикл
			лСтрока = Сред(Строка, сч, 1) + лСтрока;
		КонецЦикла;
		лПодстрокаПоиска = "";
		Для сч = 1 По СтрДлина(ПодстрокаПоиска) Цикл
			лПодстрокаПоиска = Сред(ПодстрокаПоиска, сч, 1) + лПодстрокаПоиска;
		КонецЦикла;
		лНачальнаяПозиция = макс(1, СтрДлина(Строка)-лНачальнаяПозиция-СтрДлина(ПодстрокаПоиска)+2);
	Иначе
		лСтрока = Строка;
		лПодстрокаПоиска = ПодстрокаПоиска;
		лНачальнаяПозиция = лНачальнаяПозиция;
	КонецЕсли;
	
	лНомерВхождения = 0;
	Результат = Найти(Сред(лСтрока, лНачальнаяПозиция), лПодстрокаПоиска);
	Пока Результат Цикл
		лНачальнаяПозиция = Результат + лНачальнаяПозиция + СтрДлина(ПодстрокаПоиска)-1;
		лНомерВхождения = лНомерВхождения + 1;
		Если лНомерВхождения = НомерВхождения Тогда
			Прервать;
		КонецЕсли;
		Результат = Найти(Сред(лСтрока, лНачальнаяПозиция), лПодстрокаПоиска);
	КонецЦикла;
	
	Если лНомерВхождения = НомерВхождения Тогда
		Результат = лНачальнаяПозиция - СтрДлина(ПодстрокаПоиска);
	Иначе
		Результат = 0;
	КонецЕсли;
		
	Если НаправлениеПоиска = "СКонца" И Результат<>0 Тогда
		Результат = СтрДлина(Строка) - Результат - СтрДлина(ПодстрокаПоиска) + 2;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция _СтрШаблон(Шаблон, Параметр1=Неопределено, Параметр2=Неопределено, Параметр3=Неопределено,Параметр4=Неопределено,Параметр5=Неопределено,Параметр6=Неопределено,Параметр7=Неопределено,Параметр8=Неопределено,Параметр9=Неопределено,Параметр10=Неопределено) Экспорт
	Результат = Шаблон;
	
	Для сч = -10 По -1 Цикл
		Параметр = Вычислить("Параметр" + (-сч));
		Если Параметр = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если Найти(Результат, "%("+(-сч)+")") = 0 И Найти(Результат, "%"+(-сч))=0 Тогда
			ВызватьИсключение "Слишком много фактических параметров";
		КонецЕсли;
		Результат = СтрЗаменить(Результат, "%("+ (-сч) + ")", Параметр);
		Результат = СтрЗаменить(Результат, "%"+ (-сч), Параметр);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции


// Преобразует исходную строку в дату. 
// Если дату не удалось распознать, то возвращается пустая дата (01.01.01 00:00:00).
//
// Параметры:
//  Значение - Строка - строка, которую необходимо привести к дате.
//                      Формат даты должен быть в виде "ДД.ММ.ГГГГ" или "ДД/ММ/ГГ" или "ДД-ММ-ГГ ЧЧ:ММ:CC",
//                      Например, "23.02.1980" или "23/02/80 09:15:45".
//  ЧастьДаты - ЧастиДаты - Определяет допустимые части даты. По умолчанию, ЧастиДаты.Дата.
// 
// Возвращаемое значение:
//  Дата - полученная дата.
//
Функция СтрокаВДату(Знач Значение, ЧастьДаты = Неопределено) Экспорт
	
	НаборЦифр = "1234567890";
	
	Если ТипЗнч(ЧастьДаты) <> Тип("ЧастиДаты") Тогда
		ЧастьДаты = ЧастиДаты.Дата;
	КонецЕсли;
	
	ПараметрыДаты = Новый КвалификаторыДаты(ЧастьДаты);
	ОписаниеТипаДата = Новый ОписаниеТипов("Дата",,, ПараметрыДаты);
	
	Значение = ВРег(_СтрСоединить(_СтрРазделить(СокрЛП(Значение), Символы.НПП + Символы.ПС + Символы.Таб), " "));
	Результат = ОписаниеТипаДата.ПривестиЗначение(Значение);
	
	Для НомерМесяца = 1 По 12 Цикл
		Значение = СтрЗаменить(Значение, ВРег(Формат(Дата(1, НомерМесяца, 2), "ДФ=MMММ")), Формат(НомерМесяца, "ЧЦ=2; ЧВН="));
		Значение = СтрЗаменить(Значение, ВРег(Формат(Дата(1, НомерМесяца, 2), "ДФ=MMM")), Формат(НомерМесяца, "ЧЦ=2; ЧВН="));
	КонецЦикла;
	
	МассивНеЦифр = _СтрРазделить(Значение, НаборЦифр);
	Если МассивНеЦифр.Количество() < 2 Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПозицияПервойЦифры = СтрДлина(МассивНеЦифр[0]);
	ПозицияПоследнейЦифры = СтрДлина(Значение) - СтрДлина(МассивНеЦифр[МассивНеЦифр.ВГраница()]);
	Значение = Сред(Значение, ПозицияПервойЦифры, ПозицияПоследнейЦифры - ПозицияПервойЦифры);
	Если ПустаяСтрока(Значение) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ЗначениеМассивом = _СтрРазделить(Значение, " ");
	Элемент = ЗначениеМассивом[ЗначениеМассивом.ВГраница()];
	Если ЗначениеМассивом.Количество() > 1 Тогда
		Если СтрДлина(Элемент) = 2 Или СтрДлина(Элемент) = 4 Тогда
			
			ЭтоТолькоЦифры = _СтрРазделить(Элемент, НаборЦифр, Ложь).Количество() = 0;
			Если ЭтоТолькоЦифры Тогда
				ЗначениеДата = Значение;
				ЗначениеВремя = "";
			Иначе
				ЗначениеВремя = Элемент;
				ЗначениеМассивом.Удалить(ЗначениеМассивом.ВГраница());
				ЗначениеДата = _СтрСоединить(ЗначениеМассивом, " ");
			КонецЕсли;
		Иначе
			
			ЗначениеВремя = Элемент;
			ЗначениеМассивом.Удалить(ЗначениеМассивом.ВГраница());
			ЗначениеДата = _СтрСоединить(ЗначениеМассивом, " ");
		КонецЕсли;
	Иначе
		
		ЭтоТолькоЦифры = _СтрРазделить(Элемент, НаборЦифр, Ложь).Количество() = 0;
		Если ЭтоТолькоЦифры Тогда
			
			Результат = ОписаниеТипаДата.ПривестиЗначение(Элемент);
			Если Не ЗначениеЗаполнено(Результат) И СтрДлина(Элемент) = 8 Тогда
				
				ПеревернутаяДата  = Сред(Элемент, 5) + Сред(Элемент, 3, 2) + Лев(Элемент, 2);
				Результат = ОписаниеТипаДата.ПривестиЗначение(ПеревернутаяДата);
				
			КонецЕсли;
			
			Возврат Результат;
			
		ИначеЕсли _СтрНайти(Элемент, ":") > 0 Тогда
			
			ЗначениеДата = "";
			ЗначениеВремя = Элемент;
		Иначе
			ЗначениеДата = Элемент;
			ЗначениеВремя = "";
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
	
	Если ЗначениеЗаполнено(ЗначениеДата) И ЧастьДаты <> ЧастиДаты.Время Тогда
		
		НаборРазделителей = _СтрСоединить(_СтрРазделить(ЗначениеДата, НаборЦифр, Ложь), "");
		ЗначениеДатаМассивом = _СтрРазделить(ЗначениеДата, НаборРазделителей, Ложь);
		
		ЭтоТолькоЦифры = _СтрРазделить(ЗначениеДата, НаборЦифр, Ложь).Количество() = 0;
		Если НЕ ЭтоТолькоЦифры Тогда
			
			Год   = 1;
			Месяц = 1;
			День  = 1;
			
			Если СтрДлина(ЗначениеДатаМассивом[0]) = 4 Тогда
				Год = ОписаниеТипаЧисло.ПривестиЗначение(ЗначениеДатаМассивом[0]);
				ГодВНачале = Истина;
			Иначе
				День = ОписаниеТипаЧисло.ПривестиЗначение(ЗначениеДатаМассивом[0]);
				ГодВНачале = Ложь;
			КонецЕсли;
			
			Если ЗначениеДатаМассивом.Количество() = 2 Тогда
				Месяц = ОписаниеТипаЧисло.ПривестиЗначение(ЗначениеДатаМассивом[1]);;
			ИначеЕсли ЗначениеДатаМассивом.Количество() > 2 Тогда
				Месяц = ОписаниеТипаЧисло.ПривестиЗначение(ЗначениеДатаМассивом[1]);
				Если ГодВНачале Тогда
					День = ОписаниеТипаЧисло.ПривестиЗначение(ЗначениеДатаМассивом[2]);
				Иначе
					Год = ОписаниеТипаЧисло.ПривестиЗначение(ЗначениеДатаМассивом[2]);
				КонецЕсли;
			КонецЕсли;
			
			Если СтрДлина(Год) < 3 Тогда
				ГодЧислом = ОписаниеТипаЧисло.ПривестиЗначение(Год);
				Год = ?(ГодЧислом < 30, 2000, 1900) + ГодЧислом;
			Иначе
				Год = ОписаниеТипаЧисло.ПривестиЗначение(Год);
			КонецЕсли;
			
			ЗначениеДата = Формат(Год, "ЧЦ=4; ЧН=0001; ЧВН=; ЧГ=0")
				+ Формат(Месяц, "ЧЦ=2; ЧН=01; ЧВН=; ЧГ=0")
				+ Формат(День, "ЧЦ=2; ЧН=01; ЧВН=; ЧГ=0");
		Иначе
			
			Если СтрДлина(ЗначениеДата) = 6 Тогда
				
				Год = Прав(ЗначениеДата, 2);
				ГодЧислом = ОписаниеТипаЧисло.ПривестиЗначение(Год);
				ЗначениеДата = ?(ГодЧислом < 30, 2000, 1900) + Год + Сред(ЗначениеДата, 3, 2) + Лев(ЗначениеДата, 2) ;
				
			ИначеЕсли СтрДлина(ЗначениеДата) = 8 Тогда
				
				Результат = ОписаниеТипаДата.ПривестиЗначение(ЗначениеДата);
				
				Если Не ЗначениеЗаполнено(Результат) Тогда
					ПеревернутаяДата  = Сред(ЗначениеДата, 5) + Сред(ЗначениеДата, 3, 2) + Лев(ЗначениеДата, 2);
					Результат = ОписаниеТипаДата.ПривестиЗначение(ПеревернутаяДата);
					Если ЗначениеЗаполнено(Результат) Тогда
						ЗначениеДата = ПеревернутаяДата;
					КонецЕсли;
				КонецЕсли;
			
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		ЗначениеДата = "00010101";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначениеВремя) И ЧастьДаты <> ЧастиДаты.Дата Тогда
		
		ЭтоТолькоЦифры = _СтрРазделить(ЗначениеВремя, НаборЦифр, Ложь).Количество() = 0;
		Если НЕ ЭтоТолькоЦифры Тогда
			
			НаборРазделителей = _СтрСоединить(_СтрРазделить(ЗначениеВремя, НаборЦифр, Ложь), "");
			ЗначениеВремяМассивом = _СтрРазделить(ЗначениеВремя, НаборРазделителей, Ложь);
			
			Час     = ОписаниеТипаЧисло.ПривестиЗначение(ЗначениеВремяМассивом[0]);
			Минута  = 0;
			Секунда = 0;
			
			Если ЗначениеВремяМассивом.Количество() = 2 Тогда
				Минута = ОписаниеТипаЧисло.ПривестиЗначение(ЗначениеВремяМассивом[1]);
			ИначеЕсли ЗначениеВремяМассивом.Количество() > 2 Тогда
				Минута = ОписаниеТипаЧисло.ПривестиЗначение(ЗначениеВремяМассивом[1]);
				Секунда = ОписаниеТипаЧисло.ПривестиЗначение(ЗначениеВремяМассивом[2]);
			КонецЕсли;
			
			ШаблонФормата = "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=0";
			ЗначениеВремя = Формат(Час, ШаблонФормата)
				+ Формат(Минута, ШаблонФормата)
				+ Формат(Секунда, ШаблонФормата);
				
		КонецЕсли;
		
	Иначе
		ЗначениеВремя = "000000";
	КонецЕсли;
	
	Результат = ОписаниеТипаДата.ПривестиЗначение(ЗначениеДата + ЗначениеВремя);
	
	Возврат Результат;
	
КонецФункции

// Преобразует исходную строку в число без вызова исключений.
//
// Параметры:
//   Значение - Строка - строка, которую необходимо привести к числу.
//                       Например, "10", "+10", "010", вернет 10;
//                                 "(10)", "-10",вернет -10;
//                                 "10,2", "10.2",вернет 10.2;
//                                 "000", " ", "",вернет 0;
//                                 "10текст", вернет Неопределено.
//
// Возвращаемое значение:
//   Число, Неопределено - полученное число, либо Неопределено, если строка не является числом.
//
Функция СтрокаВЧисло(Знач Значение) Экспорт
	
	Значение  = СтрЗаменить(Значение, " ", "");
	Если _СтрНачинаетсяС(Значение, "(") Тогда
		Значение = СтрЗаменить(Значение, "(", "-");
		Значение = СтрЗаменить(Значение, ")", "");
	КонецЕсли;
	
	СтрокаБезНулей = СтрЗаменить(Значение, "0", "");
	Если ПустаяСтрока(СтрокаБезНулей) Или СтрокаБезНулей = "-" Тогда
		Возврат 0;
	КонецЕсли;
	
	ТипЧисло  = Новый ОписаниеТипов("Число");
	Результат = ТипЧисло.ПривестиЗначение(Значение);
	
	Возврат ?(Результат <> 0 И Не ПустаяСтрока(СтрокаБезНулей), Результат, Неопределено);
	
КонецФункции
