
#Область МетодыAPI

Функция АПИ_ГеокодированиеДадата(Адрес)
	
	Результат = Новый Структура;
	Результат.Вставить("ОписаниеОшибки", "");
	Результат.Вставить("ОтветСайта", "");
	
	ДанныеАвторизации = ПолучитьДанныеАвторизацииДадата();
	ТелоЗапроса = "{ ""query"": """+ Адрес +""", ""count"": 1 }";
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	Заголовки.Вставить("Accept", "application/json");
	Заголовки.Вставить("Authorization", "Token " + ДанныеАвторизации.Токен);
	HTTPЗапрос = Новый HTTPЗапрос(ДанныеАвторизации.АдресРесурса, Заголовки);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	Соединение = Новый HTTPСоединение(ДанныеАвторизации.АдресСервера,,,,,,Новый ЗащищенноеСоединениеOpenSSL);	
	Попытка
		HTTPОтвет = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
	Исключение
		Результат.ОписаниеОшибки = "Ошибка в запросе. Не удалось получить данные. Описание ошибки: " + ОписаниеОшибки();
		Возврат Результат;
	КонецПопытки; 
	
	КодСостояния = HTTPОтвет.КодСостояния;	
	Если КодСостояния >= 500 Тогда 
		Результат.ОписаниеОшибки = "Ошибка в запросе. Ошибка сервера при обработке запроса";
	Иначе
		Результат.ОтветСайта = HTTPОтвет.ПолучитьТелоКакСтроку();	
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция АПИ_ГеокодированиеЯндекс(Адрес)
	
КонецФункции

#КонецОбласти 

#Область ПрикладныеМетоды

Функция Геокодирование(Адрес) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Адрес) Тогда
		ГеоДанные = ПолучитьСтруктуруГеоДанных();
		ГеоДанные.Адрес = Адрес;
		ГеоДанные.ОписаниеОшибкиГеокодирования = "Пустой адрес";
		
		Возврат ГеоДанные;
	КонецЕсли;
	
	ОтветГеокодирования = ПолучитьГеокодированиеИзКэша(Адрес);
	Если ОтветГеокодирования.Результат Тогда
		Возврат ОтветГеокодирования.ГеоДанные;	
	КонецЕсли;
	
	ГеоДанныеДадата = ГеокодированиеДадата(Адрес);
	Если ГеоДанныеДадата.ЭтоКорректныйАдрес Тогда
		СохранитьГеокодированиеВКэш(ГеоДанныеДадата);
		Возврат ГеоДанныеДадата;	
	КонецЕсли;
	
	ГеоДанныеЯндекс = ГеокодированиеЯндекс(Адрес);
	Если ГеоДанныеЯндекс.ЭтоКорректныйАдрес Тогда
		СохранитьГеокодированиеВКэш(ГеоДанныеЯндекс);
		Возврат ГеоДанныеЯндекс;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГеоДанныеЯндекс.ОписаниеОшибкиГеокодирования) Тогда
		ОписаниеОшибки = ГеоДанныеЯндекс.ОписаниеОшибкиГеокодирования;
	ИначеЕсли ЗначениеЗаполнено(ГеоДанныеДадата.ОписаниеОшибкиГеокодирования) Тогда
		ОписаниеОшибки = ГеоДанныеДадата.ОписаниеОшибкиГеокодирования;
	Иначе
		ОписаниеОшибки = "Некорректный адрес.";
	КонецЕсли;
		
	ГеоДанные = ПолучитьСтруктуруГеоДанных();
	ГеоДанные.Адрес = Адрес;
	ГеоДанные.ОписаниеОшибкиГеокодирования = ОписаниеОшибки;
	
	Если НЕ _СтрНачинаетсяС(ГеоДанные.ОписаниеОшибкиГеокодирования, "Ошибка в запросе.") Тогда
		СохранитьГеокодированиеВКэш(ГеоДанные);
	КонецЕсли;

	Возврат ГеоДанные;
КонецФункции

Функция ОбратноеГеокодирование(Широта, Долгота) Экспорт
	
	
	
КонецФункции

#КонецОбласти

#Область Геокодирование

////ИНИЦИАЛИЗАЦИЯ////
Функция ПолучитьСтруктуруГеоДанных() Экспорт
	
	СтруктураГеокодирования = Новый Структура;
	
	СтруктураГеокодирования.Вставить("Адрес", "");
	СтруктураГеокодирования.Вставить("Широта", "");
	СтруктураГеокодирования.Вставить("Долгота", "");
	СтруктураГеокодирования.Вставить("Область", "");
	СтруктураГеокодирования.Вставить("Город", "");
	СтруктураГеокодирования.Вставить("Улица", "");
	СтруктураГеокодирования.Вставить("Дом", "");
	СтруктураГеокодирования.Вставить("АдресНормализованный", "");
	СтруктураГеокодирования.Вставить("ЭтоКорректныйАдрес", Ложь);
	СтруктураГеокодирования.Вставить("ОписаниеОшибкиГеокодирования", "");
	
	Возврат СтруктураГеокодирования;
КонецФункции

////ПОЛУЧЕНИЕ ГЕОДАННЫХ////
Функция ГеокодированиеДадата(Адрес)
	
	//{{{Добавил Поляков А.С. 18.08.2020
	Логирование.ДобавитьИнформациюУниверсальноеЛогирование(ТекущаяДата(), Справочники.ОбъектЛогирования.СчетчикЗапросовНаГеокодирование, Адрес, "");
	//}}}Добавил Поляков А.С. 18.08.2020
	
	ГеоДанные = ПолучитьСтруктуруГеоДанных();
	ГеоДанные.Адрес = Адрес;
		
	РезультатГеокодирования = АПИ_ГеокодированиеДадата(Адрес);
	Если ЗначениеЗаполнено(РезультатГеокодирования.ОписаниеОшибки) Тогда
		ГеоДанные.ОписаниеОшибкиГеокодирования = РезультатГеокодирования.ОписаниеОшибки;
		Возврат ГеоДанные;
	КонецЕсли;
	
	//// РАБОТА С ОТВЕТОМ САЙТА ////
	ТекстОтвета = РезультатГеокодирования.ОтветСайта;
	
	ОтветСайта = Служебный.РазобратьJSON(ТекстОтвета);
	Если НЕ ТипЗнч(ОтветСайта) = Тип("Структура") Тогда
		ГеоДанные.ОписаниеОшибкиГеокодирования = "Не удалось разобрать ответ сайта";
		Возврат ГеоДанные;
	КонецЕсли;
	
	Если НЕ Служебный.СвойствоСуществует(ОтветСайта,"suggestions") Тогда
		ГеоДанные.ОписаниеОшибкиГеокодирования = "Некорректный ответ сайта";
		Возврат ГеоДанные;	
	КонецЕсли;
	
	Если ОтветСайта.suggestions.Количество() = 0 Тогда
		ГеоДанные.ОписаниеОшибкиГеокодирования = "Некорректный адрес";
		Возврат ГеоДанные;	
	КонецЕсли;
	
	suggestion = ОтветСайта.suggestions[0];
	
	ПолеРегион = "region";
	ПолеГород = "city";
	ПолеУлица = "street";
	ПолеДом = "house";
	
	мОшибок = Новый Массив;
	Если НЕ ЗначениеЗаполнено(suggestion.data[ПолеРегион]) Тогда
		мОшибок.Добавить("Не заполнен регион");	
	КонецЕсли;
	
	ГородЗаполнен = ЗначениеЗаполнено(suggestion.data.city); 
	НасПунктЗаполнен = ЗначениеЗаполнено(suggestion.data.settlement);
	УлицаЗаполнена = ЗначениеЗаполнено(suggestion.data.street);
	
	Если УлицаЗаполнена Тогда
		Если НЕ ГородЗаполнен И НЕ НасПунктЗаполнен Тогда
			мОшибок.Добавить("Не заполнен город");
		Иначе
			Если НасПунктЗаполнен Тогда
				ПолеГород = "settlement";				
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ГородЗаполнен Тогда
			ПолеУлица = "settlement";	
		Иначе
			Если НасПунктЗаполнен Тогда
				ПолеГород = "settlement";	
			Иначе
				мОшибок.Добавить("Не заполнен город");
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
		
	Если мОшибок.Количество() > 0 Тогда
		ГеоДанные.ОписаниеОшибкиГеокодирования = _СтрСоединить(мОшибок, Символы.ПС);
		Возврат ГеоДанные;	
	КонецЕсли;
	
	ВзятьУлицуИзНасПункта = Ложь;
	Если ЗначениеЗаполнено(suggestion.data[ПолеУлица]) Тогда
		
		Если НЕ ЗначениеЗаполнено(suggestion.data[ПолеДом]) Тогда
			мОшибок.Добавить("Не заполнен номер дома");	
		КонецЕсли;
		
	Иначе
		
		Если ПолеГород = "settlement" Тогда
			КодГорода = suggestion.data.settlement_kladr_id;
		Иначе
			КодГорода = suggestion.data.city_kladr_id;	
		КонецЕсли;
		
		ОписаниеТиповЧисло = Служебный.ОписаниеТиповПереопределенное("Число", 25, 0, ДопустимыйЗнак.Неотрицательный);
		ДлинаКодаГорода = СтрДлина(КодГорода);
		Пока ДлинаКодаГорода < 25 Цикл
			КодГорода = КодГорода + "0";
			ДлинаКодаГорода = ДлинаКодаГорода + 1;
		КонецЦикла;
		КодГородаЧислом = ОписаниеТиповЧисло.ПривестиЗначение(КодГорода);
		
		Если КодГородаЧислом = 0 Тогда
			ОшибкаЗаполненияАдреса = ОшибкаЗаполненияАдреса + "Не заполнена улица" + Символы.ПС;	
		Иначе
			СтруктураАдресаГорода = УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресногоЭлемента(КодГородаЧислом);
			
			Если ЗначениеЗаполнено(СтруктураАдресаГорода.Наименование) Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	АдресныйКлассификатор.ТипАдресногоЭлемента,
				               |	АдресныйКлассификатор.КодРегионаВКоде,
				               |	АдресныйКлассификатор.КодРайонаВКоде,
				               |	АдресныйКлассификатор.КодГородаВКоде,
				               |	АдресныйКлассификатор.КодНаселенногоПунктаВКоде,
				               |	АдресныйКлассификатор.КодУлицыВКоде
				               |ИЗ
				               |	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
				               |ГДЕ
				               |	АдресныйКлассификатор.КодРегионаВКоде = &КодРегионаВКоде
				               |	И АдресныйКлассификатор.КодРайонаВКоде = &КодРайонаВКоде
				               |	И АдресныйКлассификатор.КодГородаВКоде = &КодГородаВКоде
				               |	И АдресныйКлассификатор.КодНаселенногоПунктаВКоде = &КодНаселенногоПунктаВКоде
				               |	И АдресныйКлассификатор.ТипАдресногоЭлемента = &ТипАдресногоЭлемента
				               |	И АдресныйКлассификатор.Сокращение = &Сокращение";
				Запрос.УстановитьПараметр("ТипАдресногоЭлемента", 5); //это код улицы
				Запрос.УстановитьПараметр("КодРегионаВКоде", СтруктураАдресаГорода.КодРегионаВКоде);
				Запрос.УстановитьПараметр("КодРайонаВКоде", СтруктураАдресаГорода.КодРайонаВКоде);
				Запрос.УстановитьПараметр("КодГородаВКоде", СтруктураАдресаГорода.КодГородаВКоде);
				Запрос.УстановитьПараметр("КодНаселенногоПунктаВКоде", СтруктураАдресаГорода.КодНаселенногоПунктаВКоде);
				Запрос.УстановитьПараметр("Сокращение", "ул");
				
				РезультатЗапроса = Запрос.Выполнить();
				Если НЕ РезультатЗапроса.Пустой() Тогда
					мОшибок.Добавить("Не заполнена улица");	
				КонецЕсли;
			Иначе
				мОшибок.Добавить("Не заполнена улица");	
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если мОшибок.Количество() > 0 Тогда
		ГеоДанные.ОписаниеОшибкиГеокодирования = _СтрСоединить(мОшибок, Символы.ПС);
		Возврат ГеоДанные;	
	КонецЕсли;
	
	Если  ЗначениеЗаполнено(suggestion.data.geo_lat) И ЗначениеЗаполнено(suggestion.data.geo_lon) Тогда
		//вернуть когда реализую геокодирование через яндекс
		//Если НЕ suggestion.data.qc_geo = "0" Тогда
		//	мОшибок.Добавить("Не удалось определить координаты");	
		//КонецЕсли;
	Иначе	
		мОшибок.Добавить("Не удалось определить координаты");	
	КонецЕсли;
		
	Если мОшибок.Количество() > 0 Тогда
		ГеоДанные.ОписаниеОшибкиГеокодирования = _СтрСоединить(мОшибок, Символы.ПС);
		Возврат ГеоДанные;	
	КонецЕсли;
	
	ГеоДанные.Широта = suggestion.data.geo_lat;
	ГеоДанные.Долгота = suggestion.data.geo_lon;
	ГеоДанные.Область = suggestion.data[ПолеРегион];
	ГеоДанные.Город = suggestion.data[ПолеГород];	
	ГеоДанные.Улица = suggestion.data[ПолеУлица];
	ГеоДанные.Дом = suggestion.data[ПолеДом];
	
	ГеоДанные.АдресНормализованный = suggestion.value;
	ГеоДанные.ЭтоКорректныйАдрес = Истина;
	
	Возврат ГеоДанные;
КонецФункции

Функция ГеокодированиеЯндекс(Адрес)
	
	ГеоДанные = ПолучитьСтруктуруГеоДанных();
	ГеоДанные.Адрес = Адрес;
	
	Возврат ГеоДанные;
КонецФункции

////КЭШ////
Функция ПолучитьГеокодированиеИзКэша(Адрес) Экспорт

	ОтветФункции = Новый Структура;
	ОтветФункции.Вставить("Результат", Ложь);
	ОтветФункции.Вставить("ОписаниеОшибки", "");
	ОтветФункции.Вставить("ГеоДанные", ПолучитьСтруктуруГеоДанных());
	ОтветФункции.ГеоДанные.Адрес = Адрес;
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КэшГеокодирования.*
	               |ИЗ
	               |	РегистрСведений.КэшГеокодирования КАК КэшГеокодирования
	               |ГДЕ
	               |	КэшГеокодирования.Адрес = &Адрес";
	Запрос.УстановитьПараметр("Адрес", Адрес);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(ОтветФункции.ГеоДанные, Выборка);
		
		ОтветФункции.Результат = Истина;
	КонецЕсли;
	 
	Возврат ОтветФункции;
КонецФункции

Процедура СохранитьГеокодированиеВКэш(ГеоДанные) Экспорт
	
	ДанныеКэш = РегистрыСведений.КэшГеокодирования.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(ДанныеКэш, ГеоДанные);
	
	Попытка
		ДанныеКэш.Записать();
	Исключение
		ТекстОшибки = "Не удалось записать гео данные в кэш. Описание ошибки: " + ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ОшибкиГеокодирования", УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);	
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти
 
#Область Служебные

Функция ПолучитьДанныеАвторизацииДадата() Экспорт
	
	ДанныеАвторизации = Новый Структура;
	ДанныеАвторизации.Вставить("АдресСервера", "");
	ДанныеАвторизации.Вставить("АдресРесурса", "");
	ДанныеАвторизации.Вставить("Токен", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КонстантыДанные.Ключ,
	               |	КонстантыДанные.Значение,
	               |	КонстантыДанные.Значение1
	               |ИЗ
	               |	Справочник.Константы.Данные КАК КонстантыДанные
	               |ГДЕ
	               |	КонстантыДанные.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Справочники.Константы.ЯМ_ГеокодированиеДадата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеАвторизации[Выборка.Ключ]	= Выборка.Значение;
	КонецЦикла;
	
	Возврат ДанныеАвторизации;
КонецФункции

Функция ПолучитьДанныеАвторизацииЯндекс() Экспорт
		
	ДанныеАвторизации = Новый Структура;
	ДанныеАвторизации.Вставить("АдресСервера", "");
	ДанныеАвторизации.Вставить("АдресРесурса", "");
	ДанныеАвторизации.Вставить("Токен", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КонстантыДанные.Ключ,
	               |	КонстантыДанные.Значение,
	               |	КонстантыДанные.Значение1
	               |ИЗ
	               |	Справочник.Константы.Данные КАК КонстантыДанные
	               |ГДЕ
	               |	КонстантыДанные.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Справочники.Константы.ЯМ_ГеокодированиеЯндекс);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеАвторизации[Выборка.Ключ]	= Выборка.Значение;
	КонецЦикла;
	
	Возврат ДанныеАвторизации;
КонецФункции

#КонецОбласти
