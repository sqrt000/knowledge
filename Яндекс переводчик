
#Область МетодыAPI

// Функция - АПИ перевод текста
//
// Параметры:
//  key		 - Строка - API-ключ 
//  text	 - Строка - Текст, который необходимо перевести. Для исходного текста обязательно используйте URL-кодирование.
//  lang	 - Строка - Направление перевода. 
// 	Может задаваться одним из следующих способов: 
// 	1) В виде пары кодов языков («с какого»-«на какой»), разделенных дефисом. Например, en-ru обозначает перевод с английского на русский.
//  2) В виде кода конечного языка (например ru). В этом случае сервис пытается определить исходный язык автоматически.
//  format	 - Строка - Формат текста.
//	Возможные значения:
//	1) plain — текст без разметки (значение по умолчанию);
//	2) html — текст в формате HTML.
//  options	 - Число - В настоящее время доступна единственная опция — признак включения в ответ автоматически
//					   определенного языка переводимого текста. Этому соответствует значение 1 этого параметра.
//                     Если язык переводимого текста задан в явном виде, т. е. параметр lang представлен в виде 
//                     пары кодов, то первый код однозначно определяет исходный язык. Это означает, что параметр 
//                     options не позволяет переключиться в режим автоматического определения языка. Однако 
//                     он позволяет понять, правильно ли был указан исходный язык в параметре lang.
// Интерфейс:
// Возможные значения:
// 1) JSON
// 2) XML
// Возвращаемое значение:
// Структура - ТекстОшибки, ОтветСайта
//
Функция АПИ_ПереводТекста(Параметры, Интерфейс)
	
	Результат = Новый Структура;
	Результат.Вставить("ТекстОшибки", "");
	Результат.Вставить("ОтветСайта", "");
	
	//// ГОТОВИМ ТЕКСТ ЗАПРОСА ////
	Шаблон = "?%1%2%3";
	
	Ключ = "key=" + Параметры.key;
	Текст = "&text=" + Параметры.text;
	Язык = "&lang=" + Параметры.lang;
	
	Если Параметры.Свойство("format") Тогда
		Шаблон = Шаблон + "%4";
		ФорматТекста = "&format=" + Параметры.format;
	Иначе
		ФорматТекста = "";		
	КонецЕсли;
	
	Если Параметры.Свойство("options") Тогда
		Шаблон = Шаблон + "%5";
		Опции = "&options=" + Параметры.options;
	Иначе
		Опции = "";		
	КонецЕсли;
	
	АдресРесурса = ПолучитьАдресРесурсаПереводТекста(Интерфейс) + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Ключ, Текст, Язык, ФорматТекста, Опции); 
	HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса);
	
	// GET ЗАПРОС ////
	Сервер = ПолучитьАдресСервера();
	Соединение = Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	ИмяВыходногоФайла = ПолучитьИмяВременногоФайла(Интерфейс);	
	Попытка
		HTTPОтвет = Соединение.Получить(HTTPЗапрос, ИмяВыходногоФайла);
	Исключение
		Результат.ТекстОшибки = "Не удалось получить данные. Описание ошибки: " + ОписаниеОшибки();
		Возврат Результат;
	КонецПопытки;
	
	//// РАБОТА С ОТВЕТОМ САЙТА ////
	ЧтениеТекста = Новый ЧтениеТекста(ИмяВыходногоФайла, КодировкаТекста.UTF8);          
	Результат.ОтветСайта = ЧтениеТекста.Прочитать();
			
	Возврат Результат;
КонецФункции

Функция АПИ_СоответствиеКодовОтвета()
	
	СоответствиеКодовОтвета = Новый Соответствие;
	СоответствиеКодовОтвета.Вставить(200, "Операция выполнена успешно");
	СоответствиеКодовОтвета.Вставить(401, "Неправильный API-ключ");
	СоответствиеКодовОтвета.Вставить(402, "API-ключ заблокирован");
	СоответствиеКодовОтвета.Вставить(404, "Превышено суточное ограничение на объем переведенного текста");
	СоответствиеКодовОтвета.Вставить(413, "Превышен максимально допустимый размер текста");
	СоответствиеКодовОтвета.Вставить(422, "Текст не может быть переведен");
	СоответствиеКодовОтвета.Вставить(501, "Заданное направление перевода не поддерживается");
	
	Возврат СоответствиеКодовОтвета;
КонецФункции

Функция АПИ_ОбработатьКодОтвета(КодОтвета)
	
	СоответствиеКодовОтвета = АПИ_СоответствиеКодовОтвета();
	Возврат СоответствиеКодовОтвета.Получить(КодОтвета);
	
КонецФункции

#КонецОбласти

#Область ПрикладныеМетоды

// Функция - Перевод текста
//
// Параметры:
//  Текст		 - Строка - Текст, который необходимо перевести.
//  ЯзыкПеревода - СправочникСсылка.Языки - На какой язык переводим
//  ИсходныйЯзык - СправочникСсылка.Языки - С какого языка переводим
//  ФорматТекста - Строка - Формат текста.
//	Возможные значения:
//	1) plain — текст без разметки (значение по умолчанию);
//	2) html — текст в формате HTML.
//  options	 - Число - В настоящее время доступна единственная опция — признак включения в ответ автоматически
//					   определенного языка переводимого текста. Этому соответствует значение 1 этого параметра.
//                     Если язык переводимого текста задан в явном виде, т. е. параметр lang представлен в виде 
//                     пары кодов, то первый код однозначно определяет исходный язык. Это означает, что параметр 
//                     options не позволяет переключиться в режим автоматического определения языка. Однако 
//                     он позволяет понять, правильно ли был указан исходный язык в параметре lang.
//  Опции		 - Число - В настоящее время доступна единственная опция — признак включения в ответ автоматически
//					   определенного языка переводимого текста. Этому соответствует значение 1 этого параметра.
//                     Если язык переводимого текста задан в явном виде, т. е. параметр lang представлен в виде 
//                     пары кодов, то первый код однозначно определяет исходный язык. Это означает, что параметр 
//                     options не позволяет переключиться в режим автоматического определения языка. Однако 
//                     он позволяет понять, правильно ли был указан исходный язык в параметре lang.
// 
// Возвращаемое значение:
// Структура - ТекстОшибки, Перевод 
//
Функция ПереводТекста(Текст, КодЯзыкаПеревода, КодИсходногоЯзыка = "", ФорматТекста = "", Опции = 0) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ТекстОшибки", "");
	Результат.Вставить("Перевод", "");
	
	ПараметрыПеревода = Новый Структура;
	ПараметрыПеревода.Вставить("key", ПолучитьАпиКлюч());
	ПараметрыПеревода.Вставить("text", КодированиеURL(Текст)); 
	
	Если ЗначениеЗаполнено(КодИсходногоЯзыка) Тогда
		НаправлениеПеревода = "" + КодИсходногоЯзыка + "-" + КодЯзыкаПеревода;	
	Иначе
		НаправлениеПеревода = "" + КодЯзыкаПеревода;	
	КонецЕсли;
	ПараметрыПеревода.Вставить("lang", НаправлениеПеревода);
	
	Если ЗначениеЗаполнено(ФорматТекста) Тогда
		ПараметрыПеревода.Вставить("format", ФорматТекста);	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Опции) Тогда
		ПараметрыПеревода.Вставить("options", Опции);	
	КонецЕсли;
	
	Интерфейс = "json";
	
	РезультатЗапроса = АПИ_ПереводТекста(ПараметрыПеревода, Интерфейс);
	Если ЗначениеЗаполнено(РезультатЗапроса.ТекстОшибки) Тогда
		Результат.ТекстОшибки = РезультатЗапроса.ТекстОшибки;	
	Иначе	
		
		ОтветСайта = Служебный.РазобратьJSON(РезультатЗапроса.ОтветСайта);
		Если ОтветСайта.code = 200 Тогда
			Результат.Перевод = ОтветСайта.text[0];	
		Иначе
			Результат.ТекстОшибки = АПИ_ОбработатьКодОтвета(ОтветСайта.code);	
		КонецЕсли;
				
	КонецЕсли;
		
	Возврат Результат;
КонецФункции

Функция ПеревестиТекст(Текст, КодЯзыкаПеревода, КодИсходногоЯзыка = "", Ошибки = "") Экспорт
	
	РезультатПеревода = ПереводТекста(Текст, КодЯзыкаПеревода, КодИсходногоЯзыка);
	Ошибки = РезультатПеревода.ТекстОшибки;
	
	Возврат РезультатПеревода.Перевод;
КонецФункции

Функция ПеревестиНаАнглийский(Текст, ИсходныйЯзыкИлиКод = "", Ошибки = "") Экспорт
	
	Если ТипЗнч(ИсходныйЯзыкИлиКод) = Тип("Строка") Тогда
		КодИсходногоЯзыка = ИсходныйЯзыкИлиКод;
	Иначе
		КодИсходногоЯзыка = УправлениеПереводом.ПолучитьКодЯзыка(ИсходныйЯзыкИлиКод);
	КонецЕсли;
	
	Возврат ПеревестиТекст(Текст, Справочники.Языки.Английский.Код, КодИсходногоЯзыка, Ошибки);
	
КонецФункции

Функция ПеревестиНаРусский(Текст, ИсходныйЯзыкИлиКод = "", Ошибки = "") Экспорт
	
	Если ТипЗнч(ИсходныйЯзыкИлиКод) = Тип("Строка") Тогда
		КодИсходногоЯзыка = ИсходныйЯзыкИлиКод;
	Иначе
		КодИсходногоЯзыка = УправлениеПереводом.ПолучитьКодЯзыка(ИсходныйЯзыкИлиКод);
	КонецЕсли;
	Возврат ПеревестиТекст(Текст, Справочники.Языки.Русский.Код, КодИсходногоЯзыка, Ошибки);
	
КонецФункции

#КонецОбласти

#Область Константы

Функция ПолучитьАпиКлюч()
	Возврат "trnsl.1.1.20190521T062328Z.149dabb255a2c301.ed03dbb0c2fae5005ee05dc9491e418dd616e655";	
КонецФункции

Функция ПолучитьАдресСервера()
	Возврат "translate.yandex.net";	
КонецФункции

Функция ПолучитьАдресРесурсаПереводТекста(Интерфейс = "json")
	
	АдресРесурса = "";
	Если ВРЕГ(Интерфейс) = "JSON" Тогда
		АдресРесурса = "/api/v1.5/tr.json/translate";
	ИначеЕсли ВРЕГ(Интерфейс) = "XML" Тогда
		АдресРесурса = "/api/v1.5/tr/translate";
	КонецЕсли;
	
	Возврат АдресРесурса;
КонецФункции

#КонецОбласти

#Область СлужебныеМетоды

Функция КодированиеURL(Строка)
	Возврат КодироватьСтроку(Строка, СпособКодированияСтроки.КодировкаURL);	
КонецФункции

#КонецОбласти
