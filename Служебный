Функция СвойствоСуществует(Объект, Свойство) Экспорт
	
	Структура = Новый Структура(Свойство, NULL);
	ЗаполнитьЗначенияСвойств(Структура, Объект);
	Если Структура[Свойство] <> NULL тогда
		Возврат Истина;	
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция РазницаТаблицЗначений(Таблица0, Таблица1, Измерения) Экспорт
    
    ВсеКолонки = "";
    Для Каждого Колонка Из Таблица0.Колонки Цикл 
        ВсеКолонки = ВсеКолонки + ", " + Колонка.Имя
    КонецЦикла;
    ВсеКолонки = Сред(ВсеКолонки, 2);
    
    Таблица = Таблица1.Скопировать();    
    
    Таблица.Колонки.Добавить("Знак", Новый ОписаниеТипов("Число"));
    
    Таблица.ЗаполнитьЗначения(1, "Знак");
    
    Для ё = 1 По Таблица0.Количество() Цикл Таблица.Вставить(0) КонецЦикла;
    
    Для ё = 0 По Таблица0.Колонки.Количество() - 1 Цикл Таблица.ЗагрузитьКолонку(Таблица0.ВыгрузитьКолонку(ё), ё) КонецЦикла;
    
    Таблица.Колонки.Добавить("Счёт");
    Таблица.ЗаполнитьЗначения(1, "Счёт");
    
    Таблица.Свернуть(ВсеКолонки, "Знак, Счёт");
    
    Ответ = Таблица.Скопировать(Новый Структура("Счёт", 1), ВсеКолонки + ", Знак");
    
    Ответ.Сортировать(Измерения);
    
    Возврат Ответ
    
КонецФункции

#Область РаботаСДатами

Функция ПустаяДата() Экспорт
	Возврат	Дата(1, 1, 1);
КонецФункции

Функция СложитьДвеДаты(Дата1, Дата2) Экспорт
	
	//{{{Добавил Поляков А.С. 31.05.2021
	Возврат Дата1 + (Дата2 - ПустаяДата());
	//}}}Добавил Поляков А.С. 31.05.2021
	
КонецФункции //(СложитьДвеДаты)

Функция ДниВСекундах(КоличествоДней = 1) Экспорт
	Возврат 60*60*24 * КоличествоДней;	
КонецФункции

#КонецОбласти

#Область UnixData

Функция ПреобразоватьДатуВTimestamp(Дата1С) Экспорт

	Возврат Формат(Число(Дата1С - Дата(1970, 01, 01)),"ЧГ=0");
	
КонецФункции

Функция ПреобразоватьTimestampВДату(ДатаTS) Экспорт
	
	Возврат Дата(1970, 01, 01) + ДатаTS;
	
КонецФункции

Функция ПолучитьСоставВремениИзДатыСекунд(ДатаСекунды) Экспорт
	
	//{{{Добавил Поляков А.С. 15.10.2020
	СтруктураСоставВремени = Новый Структура("Время, Годы, Месяца, Дни, Часы, Минуты, Секунды", ПустаяДата(), 0, 0, 0, 0);
	
	Время = ПустаяДата();
	ТипВхПараметра = ТипЗнч(ДатаСекунды);
	Если ТипВхПараметра = Тип("Число") Тогда 
		Время = Время + ДатаСекунды;
	ИначеЕсли ТипВхПараметра = Тип("Дата") Тогда 
		Время = ДатаСекунды;
	ИначеЕсли ТипВхПараметра = Тип("Строка") Тогда
		ОписаниеТипаДата = ОписаниеТиповПереопределенное("Дата", ЧастиДаты.ДатаВремя);
		Время = ОписаниеТипаДата.Привести(ДатаСекунды);
		Если НЕ ЗначениеЗаполнено(Время) Тогда
			ОписаниеТипаЧисло = ОписаниеТиповПереопределенное("Число", 15, 0, ДопустимыйЗнак.Неотрицательный);
			СекундыЧислом = ОписаниеТипаЧисло.Привезти(ДатаСекунды);
			Если СекундыЧислом > 0 Тогда
				Время = Время + СекундыЧислом;	
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Время) Тогда
		Возврат СтруктураСоставВремени;
	КонецЕсли;
	
	СтруктураСоставВремени.Время 	= Время;
	СтруктураСоставВремени.Годы 	= Год(Время);
	СтруктураСоставВремени.Месяца 	= Месяц(Время);
	СтруктураСоставВремени.Дни 		= День(Время);
	СтруктураСоставВремени.Часы 	= Час(Время);
	СтруктураСоставВремени.Минуты 	= Минута(Время);
	СтруктураСоставВремени.Секунды 	= Секунда(Время);
	
	Возврат СтруктураСоставВремени;
	//}}}Добавил Поляков А.С. 15.10.2020
	
КонецФункции //(ПолучитьСоставВремениИзДатыСекунд)

#КонецОбласти

#Область JSON

Функция ЗаписатьJSONПереопределямый(ОбъектЗаписиJSON, ЗаписатьВФайл = Ложь, ПутьКФайлу = "") Экспорт

	Результат = ""; //если запись в строку, то вернёт текст json. если в файл - путь к файлу.
	
	Если ЗаписатьВФайл Тогда
		
		
		Если ПутьКФайлу = "" Тогда
			Результат = ПолучитьИмяВременногоФайла("json");
		Иначе
			Результат = ПутьКФайлу;
		КонецЕсли;
		
		Попытка
			ЗаписьJSON = Новый ЗаписьJSON; 
			ЗаписьJSON.ОткрытьФайл(ПутьКФайлу, , , ) ;
			ЗаписатьJSON(ЗаписьJSON, ОбъектЗаписиJSON, ,"ПреобразованиеJSON", Служебный); 
			ЗаписьJSON.Закрыть();
		Исключение
			Результат = "";
			#Если Клиент Тогда
				Сообщить(ОписаниеОшибки());
			#КонецЕсли
		КонецПопытки;
		
	Иначе
				
		Попытка
			ЗаписьJSON = Новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку();
			ЗаписатьJSON(ЗаписьJSON, ОбъектЗаписиJSON, ,"ПреобразованиеJSON", Служебный);
			Результат = ЗаписьJSON.Закрыть();
		Исключение
			#Если Клиент Тогда
				Сообщить(ОписаниеОшибки());
			#КонецЕсли	
		КонецПопытки;
		
	КонецЕсли;

	Возврат Результат;
КонецФункции

Функция ПреобразованиеJSON(Свойство, Значение, ДополнительныеПараметры, Отказ) Экспорт
	
	ТипЗначения = ТипЗнч(Значение);
	Если ТипЗначения = Тип("УникальныйИдентификатор") Тогда
		Возврат Строка(Значение);
	КонецЕсли;
	
	Если ОбщегоНазначения.ЭтоСсылка(ТипЗначения) Тогда
		Возврат ОбщегоНазначения.ПредметСтрокой(Значение);		
	КонецЕсли;
	
	Если ТипЗначения = Тип("Null") Тогда
		Возврат "";
	КонецЕсли;

	Если ТипЗначения = Тип("Тип") Тогда
		Возврат Строка(Значение);
	КонецЕсли;

КонецФункции
	
Функция РазобратьJSON(ТекстJSON) Экспорт
		
	ЧтениеДЖСОН = Новый ЧтениеJSON();
	ЧтениеДЖСОН.УстановитьСтроку(ТекстJSON);
	
	Попытка
		
		Возврат ПрочитатьJSON(ЧтениеДЖСОН);
		
	Исключение
		
		Возврат Неопределено;	
		
	КонецПопытки;
	
КонецФункции

#КонецОбласти

